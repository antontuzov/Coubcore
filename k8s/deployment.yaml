apiVersion: apps/v1
kind: Deployment
metadata:
  name: coubcore-backend
  labels:
    app: coubcore
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: coubcore
      tier: backend
  template:
    metadata:
      labels:
        app: coubcore
        tier: backend
    spec:
      containers:
      - name: backend
        image: coubcore/backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: GO_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        volumeMounts:
        - name: blockchain-data
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: blockchain-data
        persistentVolumeClaim:
          claimName: blockchain-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coubcore-frontend
  labels:
    app: coubcore
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: coubcore
      tier: frontend
  template:
    metadata:
      labels:
        app: coubcore
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: coubcore/frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_API_URL
          value: "http://coubcore-backend:8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5