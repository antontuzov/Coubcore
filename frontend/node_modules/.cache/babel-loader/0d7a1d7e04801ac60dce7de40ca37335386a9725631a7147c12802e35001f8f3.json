{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddressBook=_ref=>{let{onAddressSelect}=_ref;const[addresses,setAddresses]=useState([// Sample data - in a real app, this would come from local storage or a database\n{id:'1',name:'My Wallet',address:'0x1234567890abcdef1234567890abcdef12345678'},{id:'2',name:'Friend 1',address:'0xabcdef1234567890abcdef1234567890abcdef12'}]);const[newName,setNewName]=useState('');const[newAddress,setNewAddress]=useState('');const[error,setError]=useState('');const handleAddAddress=()=>{// Validate inputs\nif(!newName.trim()||!newAddress.trim()){setError('Please fill in all fields');return;}// Check if address already exists\nif(addresses.some(addr=>addr.address===newAddress)){setError('Address already exists');return;}// Add new address\nconst newEntry={id:Date.now().toString(),name:newName.trim(),address:newAddress.trim()};setAddresses([...addresses,newEntry]);setNewName('');setNewAddress('');setError('');};const handleRemoveAddress=id=>{setAddresses(addresses.filter(addr=>addr.id!==id));};const handleSelectAddress=address=>{if(onAddressSelect){onAddressSelect(address);}};const truncateAddress=address=>{if(address.length<=20)return address;return address.substring(0,10)+'...'+address.substring(address.length-8);};return/*#__PURE__*/_jsxs(\"div\",{className:\"address-book bg-gray-800 rounded-xl p-6 shadow-lg backdrop-blur-sm bg-opacity-70 border border-gray-700\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-white mb-4 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\",children:\"Address Book\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-gray-750 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-white mb-3\",children:\"Add New Address\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-900 text-red-200 p-2 rounded mb-3 text-sm\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-300 text-sm font-medium mb-1\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newName,onChange:e=>setNewName(e.target.value),placeholder:\"Enter name\",className:\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-300 text-sm font-medium mb-1\",children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newAddress,onChange:e=>setNewAddress(e.target.value),placeholder:\"Enter wallet address\",className:\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddAddress,className:\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105\",children:\"Add Address\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-white mb-3\",children:\"Saved Addresses\"}),addresses.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-center py-4\",children:\"No addresses saved\"}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-60 overflow-y-auto\",children:addresses.map(entry=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-3 bg-gray-750 rounded-lg hover:bg-gray-700 transition-colors duration-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cursor-pointer flex-1\",onClick:()=>handleSelectAddress(entry.address),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-white\",children:entry.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-300 font-mono text-sm truncate\",children:truncateAddress(entry.address)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveAddress(entry.id),className:\"text-red-400 hover:text-red-300 ml-2\",children:\"Remove\"})]},entry.id))})]})]});};export default AddressBook;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddressBook","_ref","onAddressSelect","addresses","setAddresses","id","name","address","newName","setNewName","newAddress","setNewAddress","error","setError","handleAddAddress","trim","some","addr","newEntry","Date","now","toString","handleRemoveAddress","filter","handleSelectAddress","truncateAddress","length","substring","className","children","type","value","onChange","e","target","placeholder","onClick","map","entry"],"sources":["/Users/admin/Documents/Forbest/Coubcore/frontend/src/components/AddressBook.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface AddressEntry {\n  id: string;\n  name: string;\n  address: string;\n}\n\ninterface AddressBookProps {\n  onAddressSelect?: (address: string) => void;\n}\n\nconst AddressBook: React.FC<AddressBookProps> = ({ onAddressSelect }) => {\n  const [addresses, setAddresses] = useState<AddressEntry[]>([\n    // Sample data - in a real app, this would come from local storage or a database\n    { id: '1', name: 'My Wallet', address: '0x1234567890abcdef1234567890abcdef12345678' },\n    { id: '2', name: 'Friend 1', address: '0xabcdef1234567890abcdef1234567890abcdef12' },\n  ]);\n  \n  const [newName, setNewName] = useState('');\n  const [newAddress, setNewAddress] = useState('');\n  const [error, setError] = useState('');\n\n  const handleAddAddress = () => {\n    // Validate inputs\n    if (!newName.trim() || !newAddress.trim()) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    // Check if address already exists\n    if (addresses.some(addr => addr.address === newAddress)) {\n      setError('Address already exists');\n      return;\n    }\n\n    // Add new address\n    const newEntry: AddressEntry = {\n      id: Date.now().toString(),\n      name: newName.trim(),\n      address: newAddress.trim(),\n    };\n\n    setAddresses([...addresses, newEntry]);\n    setNewName('');\n    setNewAddress('');\n    setError('');\n  };\n\n  const handleRemoveAddress = (id: string) => {\n    setAddresses(addresses.filter(addr => addr.id !== id));\n  };\n\n  const handleSelectAddress = (address: string) => {\n    if (onAddressSelect) {\n      onAddressSelect(address);\n    }\n  };\n\n  const truncateAddress = (address: string) => {\n    if (address.length <= 20) return address;\n    return address.substring(0, 10) + '...' + address.substring(address.length - 8);\n  };\n\n  return (\n    <div className=\"address-book bg-gray-800 rounded-xl p-6 shadow-lg backdrop-blur-sm bg-opacity-70 border border-gray-700\">\n      <h3 className=\"text-xl font-bold text-white mb-4 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\">\n        Address Book\n      </h3>\n      \n      {/* Add New Address Form */}\n      <div className=\"mb-6 p-4 bg-gray-750 rounded-lg\">\n        <h4 className=\"text-lg font-semibold text-white mb-3\">Add New Address</h4>\n        {error && (\n          <div className=\"bg-red-900 text-red-200 p-2 rounded mb-3 text-sm\">\n            {error}\n          </div>\n        )}\n        <div className=\"space-y-3\">\n          <div>\n            <label className=\"block text-gray-300 text-sm font-medium mb-1\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              value={newName}\n              onChange={(e) => setNewName(e.target.value)}\n              placeholder=\"Enter name\"\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-gray-300 text-sm font-medium mb-1\">\n              Address\n            </label>\n            <input\n              type=\"text\"\n              value={newAddress}\n              onChange={(e) => setNewAddress(e.target.value)}\n              placeholder=\"Enter wallet address\"\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <button\n            onClick={handleAddAddress}\n            className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105\"\n          >\n            Add Address\n          </button>\n        </div>\n      </div>\n      \n      {/* Address List */}\n      <div>\n        <h4 className=\"text-lg font-semibold text-white mb-3\">Saved Addresses</h4>\n        {addresses.length === 0 ? (\n          <p className=\"text-gray-400 text-center py-4\">No addresses saved</p>\n        ) : (\n          <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {addresses.map((entry) => (\n              <div \n                key={entry.id} \n                className=\"flex justify-between items-center p-3 bg-gray-750 rounded-lg hover:bg-gray-700 transition-colors duration-200\"\n              >\n                <div \n                  className=\"cursor-pointer flex-1\"\n                  onClick={() => handleSelectAddress(entry.address)}\n                >\n                  <div className=\"font-medium text-white\">{entry.name}</div>\n                  <div className=\"text-blue-300 font-mono text-sm truncate\">\n                    {truncateAddress(entry.address)}\n                  </div>\n                </div>\n                <button\n                  onClick={() => handleRemoveAddress(entry.id)}\n                  className=\"text-red-400 hover:text-red-300 ml-2\"\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AddressBook;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}