{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getBlockchainInfo}from'../services/blockchainAPI';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BlockList=_ref=>{let{blocks:externalBlocks,loading:externalLoading,onBlockSelect}=_ref;const[internalBlocks,setInternalBlocks]=useState([]);const[internalLoading,setInternalLoading]=useState(true);const[error,setError]=useState('');const[chainLength,setChainLength]=useState(0);// Use external blocks and loading if provided, otherwise use internal state\nconst blocks=externalBlocks||internalBlocks;const loading=externalLoading!==undefined?externalLoading:internalLoading;useEffect(()=>{// Only load blocks if external blocks are not provided\nif(!externalBlocks){loadLatestBlocks();}else{setInternalLoading(false);}},[externalBlocks]);const loadLatestBlocks=async()=>{try{setInternalLoading(true);setError('');// Get blockchain info\nconst info=await getBlockchainInfo();setChainLength(info.length);// For demo purposes, we'll create sample blocks\n// In a real implementation, we would fetch actual blocks from the API\nconst sampleBlocks=[];const latestIndex=info.latest;for(let i=latestIndex;i>=Math.max(0,latestIndex-9);i--){sampleBlocks.push({index:i,timestamp:new Date(Date.now()-(latestIndex-i)*60000).toISOString(),previousHash:i>0?\"0x\".concat(Math.random().toString(16).substr(2,64)):'',hash:\"0x\".concat(Math.random().toString(16).substr(2,64)),data:\"Block data for block #\".concat(i),nonce:Math.floor(Math.random()*1000000),difficulty:Math.floor(Math.random()*10)+1,validator:\"Validator \".concat(Math.floor(Math.random()*100))});}setInternalBlocks(sampleBlocks);}catch(err){setError('Failed to load blocks');console.error(err);}finally{setInternalLoading(false);}};const formatTimestamp=timestamp=>{return new Date(timestamp).toLocaleString();};const truncateHash=hash=>{if(hash.length<=20)return hash;return hash.substring(0,10)+'...'+hash.substring(hash.length-8);};return/*#__PURE__*/_jsxs(\"div\",{className:\"block-list bg-gray-800 rounded-xl p-6 shadow-lg backdrop-blur-sm bg-opacity-70 border border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-white bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\",children:\"Latest Blocks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-400 text-sm\",children:[\"Total: \",chainLength]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-900 text-red-200 p-3 rounded-lg mb-4\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-32\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 max-h-96 overflow-y-auto\",children:blocks.map(block=>/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-700 rounded-lg p-4 hover:bg-gray-750 transition-all duration-300 cursor-pointer transform hover:scale-[1.02]\",onClick:()=>onBlockSelect&&onBlockSelect(block),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-blue-400 font-bold\",children:[\"#\",block.index]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400 text-sm ml-2\",children:formatTimestamp(block.timestamp)})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded\",children:[\"Diff: \",block.difficulty]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 text-sm mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Hash:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-300 font-mono ml-2 truncate block\",children:truncateHash(block.hash)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Prev:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-purple-300 font-mono ml-2 truncate block\",children:block.index>0?truncateHash(block.previousHash):'Genesis'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mt-3 pt-2 border-t border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Nonce:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-white ml-2\",children:block.nonce})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Validator:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-green-400 ml-2 truncate max-w-[100px] inline-block\",children:truncateHash(block.validator)})]})]})]},block.index))})]});};export default BlockList;","map":{"version":3,"names":["React","useState","useEffect","getBlockchainInfo","jsx","_jsx","jsxs","_jsxs","BlockList","_ref","blocks","externalBlocks","loading","externalLoading","onBlockSelect","internalBlocks","setInternalBlocks","internalLoading","setInternalLoading","error","setError","chainLength","setChainLength","undefined","loadLatestBlocks","info","length","sampleBlocks","latestIndex","latest","i","Math","max","push","index","timestamp","Date","now","toISOString","previousHash","concat","random","toString","substr","hash","data","nonce","floor","difficulty","validator","err","console","formatTimestamp","toLocaleString","truncateHash","substring","className","children","map","block","onClick"],"sources":["/Users/admin/Documents/Forbest/Coubcore/frontend/src/components/BlockList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Block } from '../types/blockchain';\nimport { getBlockchainInfo } from '../services/blockchainAPI';\n\ninterface BlockListProps {\n  blocks?: Block[];\n  loading?: boolean;\n  onBlockSelect?: (block: Block) => void;\n}\n\nconst BlockList: React.FC<BlockListProps> = ({ blocks: externalBlocks, loading: externalLoading, onBlockSelect }) => {\n  const [internalBlocks, setInternalBlocks] = useState<Block[]>([]);\n  const [internalLoading, setInternalLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [chainLength, setChainLength] = useState(0);\n\n  // Use external blocks and loading if provided, otherwise use internal state\n  const blocks = externalBlocks || internalBlocks;\n  const loading = externalLoading !== undefined ? externalLoading : internalLoading;\n\n  useEffect(() => {\n    // Only load blocks if external blocks are not provided\n    if (!externalBlocks) {\n      loadLatestBlocks();\n    } else {\n      setInternalLoading(false);\n    }\n  }, [externalBlocks]);\n\n  const loadLatestBlocks = async () => {\n    try {\n      setInternalLoading(true);\n      setError('');\n      \n      // Get blockchain info\n      const info = await getBlockchainInfo();\n      setChainLength(info.length);\n      \n      // For demo purposes, we'll create sample blocks\n      // In a real implementation, we would fetch actual blocks from the API\n      const sampleBlocks: Block[] = [];\n      const latestIndex = info.latest;\n      \n      for (let i = latestIndex; i >= Math.max(0, latestIndex - 9); i--) {\n        sampleBlocks.push({\n          index: i,\n          timestamp: new Date(Date.now() - (latestIndex - i) * 60000).toISOString(),\n          previousHash: i > 0 ? `0x${Math.random().toString(16).substr(2, 64)}` : '',\n          hash: `0x${Math.random().toString(16).substr(2, 64)}`,\n          data: `Block data for block #${i}`,\n          nonce: Math.floor(Math.random() * 1000000),\n          difficulty: Math.floor(Math.random() * 10) + 1,\n          validator: `Validator ${Math.floor(Math.random() * 100)}`,\n        });\n      }\n      \n      setInternalBlocks(sampleBlocks);\n    } catch (err) {\n      setError('Failed to load blocks');\n      console.error(err);\n    } finally {\n      setInternalLoading(false);\n    }\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  const truncateHash = (hash: string) => {\n    if (hash.length <= 20) return hash;\n    return hash.substring(0, 10) + '...' + hash.substring(hash.length - 8);\n  };\n\n  return (\n    <div className=\"block-list bg-gray-800 rounded-xl p-6 shadow-lg backdrop-blur-sm bg-opacity-70 border border-gray-700\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-white bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\">\n          Latest Blocks\n        </h2>\n        <div className=\"text-gray-400 text-sm\">\n          Total: {chainLength}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-900 text-red-200 p-3 rounded-lg mb-4\">\n          {error}\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"flex justify-center items-center h-32\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n        </div>\n      ) : (\n        <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n          {blocks.map((block) => (\n            <div \n              key={block.index}\n              className=\"border border-gray-700 rounded-lg p-4 hover:bg-gray-750 transition-all duration-300 cursor-pointer transform hover:scale-[1.02]\"\n              onClick={() => onBlockSelect && onBlockSelect(block)}\n            >\n              <div className=\"flex justify-between items-start mb-2\">\n                <div>\n                  <span className=\"text-blue-400 font-bold\">#{block.index}</span>\n                  <span className=\"text-gray-400 text-sm ml-2\">\n                    {formatTimestamp(block.timestamp)}\n                  </span>\n                </div>\n                <span className=\"text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded\">\n                  Diff: {block.difficulty}\n                </span>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-2 text-sm mt-2\">\n                <div>\n                  <span className=\"text-gray-400\">Hash:</span>\n                  <span className=\"text-blue-300 font-mono ml-2 truncate block\">\n                    {truncateHash(block.hash)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-gray-400\">Prev:</span>\n                  <span className=\"text-purple-300 font-mono ml-2 truncate block\">\n                    {block.index > 0 ? truncateHash(block.previousHash) : 'Genesis'}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"flex justify-between items-center mt-3 pt-2 border-t border-gray-700\">\n                <div className=\"text-sm\">\n                  <span className=\"text-gray-400\">Nonce:</span>\n                  <span className=\"text-white ml-2\">{block.nonce}</span>\n                </div>\n                <div className=\"text-sm\">\n                  <span className=\"text-gray-400\">Validator:</span>\n                  <span className=\"text-green-400 ml-2 truncate max-w-[100px] inline-block\">\n                    {truncateHash(block.validator)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlockList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}