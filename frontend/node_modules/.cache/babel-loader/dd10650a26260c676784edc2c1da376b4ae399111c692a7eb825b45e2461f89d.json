{"ast":null,"code":"import axios from'axios';// API base URL - this should match your Go backend\nconst API_BASE_URL='http://localhost:8080/api/v1';// Create an axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,timeout:10000});// Get blockchain info\nexport const getBlockchainInfo=async()=>{try{const response=await apiClient.get('/info');return response.data;}catch(error){console.error('Error fetching blockchain info:',error);throw error;}};// Get a block by index\nexport const getBlock=async index=>{try{const response=await apiClient.get(\"/block?index=\".concat(index));return response.data;}catch(error){console.error(\"Error fetching block \".concat(index,\":\"),error);throw error;}};// Get a transaction by ID\nexport const getTransaction=async txid=>{try{const response=await apiClient.get(\"/transaction?txid=\".concat(txid));return response.data;}catch(error){console.error(\"Error fetching transaction \".concat(txid,\":\"),error);throw error;}};// Get balance for an address\nexport const getBalance=async address=>{try{const response=await apiClient.get(\"/balance?address=\".concat(address));return response.data;}catch(error){console.error(\"Error fetching balance for \".concat(address,\":\"),error);throw error;}};// Get connected peers\nexport const getPeers=async()=>{try{const response=await apiClient.get('/peers');return response.data;}catch(error){console.error('Error fetching peers:',error);throw error;}};// Send a transaction\nexport const sendTransaction=async transaction=>{try{const response=await apiClient.post('/send',transaction);return response.data;}catch(error){console.error('Error sending transaction:',error);throw error;}};export default{getBlockchainInfo,getBlock,getTransaction,getBalance,getPeers,sendTransaction};","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","timeout","getBlockchainInfo","response","get","data","error","console","getBlock","index","concat","getTransaction","txid","getBalance","address","getPeers","sendTransaction","transaction","post"],"sources":["/Users/admin/Documents/Forbest/Coubcore/frontend/src/services/blockchainAPI.ts"],"sourcesContent":["import axios from 'axios';\n\n// API base URL - this should match your Go backend\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\n\n// Create an axios instance\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Get blockchain info\nexport const getBlockchainInfo = async () => {\n  try {\n    const response = await apiClient.get('/info');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching blockchain info:', error);\n    throw error;\n  }\n};\n\n// Get a block by index\nexport const getBlock = async (index: number) => {\n  try {\n    const response = await apiClient.get(`/block?index=${index}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching block ${index}:`, error);\n    throw error;\n  }\n};\n\n// Get a transaction by ID\nexport const getTransaction = async (txid: string) => {\n  try {\n    const response = await apiClient.get(`/transaction?txid=${txid}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching transaction ${txid}:`, error);\n    throw error;\n  }\n};\n\n// Get balance for an address\nexport const getBalance = async (address: string) => {\n  try {\n    const response = await apiClient.get(`/balance?address=${address}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching balance for ${address}:`, error);\n    throw error;\n  }\n};\n\n// Get connected peers\nexport const getPeers = async () => {\n  try {\n    const response = await apiClient.get('/peers');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching peers:', error);\n    throw error;\n  }\n};\n\n// Send a transaction\nexport const sendTransaction = async (transaction: any) => {\n  try {\n    const response = await apiClient.post('/send', transaction);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending transaction:', error);\n    throw error;\n  }\n};\n\nexport default {\n  getBlockchainInfo,\n  getBlock,\n  getTransaction,\n  getBalance,\n  getPeers,\n  sendTransaction,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}